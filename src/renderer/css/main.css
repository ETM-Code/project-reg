/* src/renderer/css/main.css - Tailwind CSS directives and custom base styles */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add any custom base styles or component overrides here if needed later */
body {
  /* Smooth transitions for theme changes */
  transition: background-color 0.3s ease, color 0.3s ease;
}
/* Custom Select Dropdown Styles */
.custom-select-button {
  @apply relative cursor-pointer transition-colors duration-150;
  /* Base styles already applied inline via classes */
}

#modelSelectorDropdown {
  @apply transition-all duration-100 ease-out;
  /* Base styles already applied inline via classes */
  /* Add transform for subtle animation */
  transform: scale(0.95);
  opacity: 0;
  visibility: hidden; /* Use visibility for better accessibility than just display:none */
}

#modelSelectorDropdown.open {
  @apply block; /* Tailwind class to override hidden */
  transform: scale(1);
  opacity: 1;
  visibility: visible;
}

.custom-select-option {
  @apply block w-full text-left px-4 py-2 text-sm cursor-pointer transition-colors duration-100;
  color: var(--foreground-color); /* Ensure text color respects theme */
}

.custom-select-option:hover,
.custom-select-option.selected { /* Add selected state styling */
  background-color: var(--chat-list-hover-bg); /* Use chat list hover for consistency */
  color: var(--chat-list-selected-text); /* Use selected text color */
}

.custom-select-option.selected {
    font-weight: 500; /* Make selected slightly bolder */
}
/* Reusable Component Classes */
@layer components {
  .btn {
    @apply inline-flex items-center justify-center px-4 py-2 rounded-lg font-bold transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2;
    /* Base focus ring offset color might need theme variable */
    --tw-ring-offset-color: var(--background-color, #ffffff);
  }
  .btn-primary {
    @apply btn text-[var(--button-text-color)] shadow-sm hover:shadow-md; /* Removed button-hover-effect */
    /* Gradient applied via inline style for now, could be a class if static */
    /* Example focus ring using accent color */
     @apply focus:ring-[var(--accent-color)];
  }
  .btn-stop {
    @apply btn text-white shadow-sm hover:shadow-md;
    background: linear-gradient(135deg, #ef4444, #dc2626); /* Red gradient for stop button */
    @apply focus:ring-red-500;
  }
  .btn-stop:hover {
    background: linear-gradient(135deg, #dc2626, #b91c1c); /* Darker red on hover */
  }
  .btn-secondary { /* Example for potential future use */
    @apply btn bg-[var(--secondary-color)] text-[var(--sidebar-text-color)] border border-[var(--border-color-soft)] hover:bg-gray-300 focus:ring-[var(--primary-color)];
  }
  .btn-icon {
     @apply p-2 rounded-full transition-colors duration-150 focus:outline-none focus:ring-1;
  }
  .btn-header-icon {
      /* Apply base color and opacity separately */
      @apply btn-icon text-[var(--header-text-color)] opacity-80 hover:opacity-100 hover:text-[var(--header-text-color)] hover:bg-white/10 focus:ring-white/50;
  }

  .input-base {
      @apply w-full border border-[var(--input-border-color)] rounded-lg p-2 bg-[var(--input-bg-color)] text-[var(--foreground-color)] transition-colors duration-150 focus:outline-none focus:ring-2 focus:ring-[var(--input-focus-ring-color)] focus:border-[var(--primary-color)];
  }
  .select-base { /* Specific styles for select appearance */
      @apply input-base appearance-none cursor-pointer;
      background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22%236b7280%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20d%3D%22M5.293%207.293a1%201%200%20011.414%200L10%2010.586l3.293-3.293a1%201%200%20111.414%201.414l-4%204a1%201%200%2001-1.414%200l-4-4a1%201%200%20010-1.414z%22%20clip-rule%3D%22evenodd%22%20/%3E%3C/svg%3E'); /* Default arrow, consider theme variable for fill */
      background-position: right 0.75rem center;
      background-repeat: no-repeat;
      background-size: 1em;
      padding-right: 2.5rem; /* Make space for arrow */
  }
   .textarea-base {
       @apply input-base resize-none; /* Removed overflow-hidden */
       padding-right: 3.5rem; /* Keep space for send button */
   }

  .chat-list-item-base {
      @apply p-2 rounded cursor-pointer text-sm truncate transition-colors duration-150;
      /* Hover/selected styles applied via JS or specific classes */
  }

  .modal-content {
      @apply bg-[var(--content-bg-color)] text-[var(--foreground-color)] p-6 rounded-xl shadow-xl relative border border-[var(--border-color-soft)];
       --tw-shadow-color: var(--shadow-color);
  }
  .modal-close-button {
      /* Apply base color and opacity separately */
      @apply absolute top-3 right-3 text-[var(--foreground-color)] opacity-60 hover:opacity-100 hover:text-[var(--foreground-color)] p-1 transition-colors;
  }
}
/* ======================================== */
/* Settings Modal Specific Styles           */
/* ======================================== */

#settingsModal {
  @apply fixed bg-black/50 flex items-center justify-center p-4 z-50; /* Overlay, center content */
  /* Explicitly set position */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* Add transition for smoother appearance */
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
}

#settingsModal.open {
  opacity: 1;
  visibility: visible;
}

#settingsModal .modal-content {
  @apply flex flex-col max-w-3xl w-full max-h-[90vh] overflow-hidden; /* Flex column, size limits */
}

#settingsModal .modal-header {
    @apply p-4 border-b border-[var(--border-color-soft)] flex justify-between items-center flex-shrink-0; /* Header styling */
    /* Use theme variable for header background if available, else fallback */
    background-color: var(--header-bg-color, var(--content-bg-color));
}

#settingsModal .modal-title {
    @apply text-lg font-semibold text-[var(--header-text-color)];
}

#settingsModal .modal-body {
  @apply p-6 overflow-y-auto flex-grow; /* Scrollable body */
  /* Improve scrollbar appearance (optional, browser-specific) */
  scrollbar-width: thin; /* Firefox */
  scrollbar-color: var(--border-color-soft) transparent; /* Firefox */
}
#settingsModal .modal-body::-webkit-scrollbar {
  width: 8px;
}
#settingsModal .modal-body::-webkit-scrollbar-track {
  background: transparent;
}
#settingsModal .modal-body::-webkit-scrollbar-thumb {
  background-color: var(--border-color-soft);
  border-radius: 4px;
}
#settingsModal .modal-body::-webkit-scrollbar-thumb:hover {
  background-color: var(--border-color); /* Slightly darker on hover */
}


#settingsModal .settings-section {
  @apply mb-6 pb-6 border-b border-[var(--border-color-soft)]; /* Spacing and separator */
}
#settingsModal .settings-section:last-child {
    @apply mb-0 pb-0 border-b-0; /* Remove border/margin for last section */
}

#settingsModal .settings-section h3 {
  @apply text-base font-semibold mb-4 text-[var(--foreground-color-muted)]; /* Section titles - Changed text-md to text-base */
}

#settingsModal .form-group {
    @apply mb-4; /* Spacing between form elements */
}

#settingsModal label {
    @apply block text-sm font-medium mb-1 text-[var(--foreground-color)];
}

/* Ensure inputs and selects use base styles but allow overrides */
#settingsModal input[type="text"],
#settingsModal input[type="password"],
#settingsModal input[type="number"],
#settingsModal select,
#settingsModal textarea {
    @apply input-base; /* Use the defined base input style */
}

#settingsModal select {
    @apply select-base; /* Use the defined base select style */
}

#settingsModal textarea {
    @apply textarea-base min-h-[80px]; /* Ensure textarea has reasonable min height */
    /* Override padding if send button isn't relevant here */
    padding-right: 0.5rem;
}

/* Checkbox styling */
#settingsModal .checkbox-group {
    @apply flex items-center space-x-2;
}
#settingsModal input[type="checkbox"] {
    @apply h-4 w-4 rounded border-[var(--input-border-color)] text-[var(--primary-color)] focus:ring-[var(--primary-color)] focus:ring-offset-0 cursor-pointer;
    background-color: var(--input-bg-color); /* Ensure bg matches theme */
}
#settingsModal .checkbox-group label {
    @apply mb-0 font-normal; /* Adjust label style next to checkbox */
}


#settingsModal .modal-footer {
  @apply p-4 border-t border-[var(--border-color-soft)] flex justify-end space-x-3 flex-shrink-0; /* Footer styling */
   background-color: var(--content-bg-color); /* Match body bg */
 }

/* Responsiveness */
@media (max-width: 768px) {
  #settingsModal .modal-content {
    max-width: 95%; /* Allow modal to take more width on smaller screens */
    max-height: 95vh;
  }

  #settingsModal .modal-body {
    padding: 1rem; /* Reduce padding on smaller screens */
  }

   #settingsModal .settings-section h3 {
       @apply text-base mb-3;
   }

  #settingsModal .modal-footer {
    padding: 0.75rem;
    justify-content: space-between; /* Stack buttons or spread them */
  }
   #settingsModal .modal-footer .btn {
       @apply px-3 py-1.5 text-sm; /* Slightly smaller buttons */
   }
}

@media (max-width: 480px) {
    #settingsModal .modal-header {
        padding: 0.75rem;
    }
    #settingsModal .modal-title {
        @apply text-base;
    }
     #settingsModal .modal-close-button {
         @apply top-2 right-2; /* Adjust close button position */
     }

    /* Consider stacking form groups if needed */
    /* #settingsModal .form-group { ... } */
}
/* ======================================== */
/* Dynamic Input Area Styles              */
/* ======================================== */

/* 1. Make original input scrollable */
#userInput {
  overflow-y: auto; /* Allow vertical scrolling */
  /* max-height is already set inline, which is good */
}

/* 2. Overlay Styles */
#inputOverlay {
  /* Base styles are set inline in HTML (fixed, inset-0, bg, z-index, flex, items-center, justify-center) */
  /* Transition styles are also inline */
}

/* The .visible class is no longer used; JS manages Tailwind classes directly. */
/* Removing rules dependent on .visible */

/* 3. Expanded Container Styles */
#expandedInputContainer {
  /* Base styles inline (bg, p, rounded, shadow, w, max-w, flex, flex-col, max-h) */
  /* Transition styles inline */
  /* Opacity is now controlled by Tailwind classes (opacity-0/opacity-100) managed by JS */
}

/* 4. Expanded Textarea Styles */
#expandedInputTarget .textarea-base {
  flex-grow: 1; /* Allow textarea to grow */
  max-height: none; /* Remove max-height limit in expanded view */
  min-height: 150px; /* Ensure a decent minimum height */
  height: 60vh; /* Example height, adjust as needed */
  overflow-y: auto; /* Ensure it's scrollable */
}

#expandedInputTarget .relative {
    flex-grow: 1; /* Make the container grow */
    display: flex; /* Use flex to manage children */
    flex-direction: column; /* Stack textarea and button */
    min-height: 0; /* Prevent flex item overflow */
}

#expandedInputTarget #sendBtn {
    position: static; /* Override absolute positioning */
    align-self: flex-end; /* Move button to the end */
    margin-top: 0.5rem; /* Add some space above the button */
    flex-shrink: 0; /* Prevent button from shrinking */
}

/* Ensure the container holding the textarea and button in expanded view fills space */
#expandedInputTarget > div {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 0; /* Important for nested flex */
}

/* ======================================== */
/* Personality Selector Icon Preview Styles */
/* ======================================== */

.icon-preview {
    @apply flex items-center mt-2 p-2 bg-gray-50 dark:bg-gray-800 rounded border border-gray-200 dark:border-gray-700;
}

.icon-preview img {
    @apply flex-shrink-0;
}

.icon-preview img:hover {
    @apply opacity-80 transition-opacity;
}

.icon-selection {
    @apply flex items-center space-x-2;
}

.icon-selection input {
    @apply flex-grow;
}

.icon-selection button {
    @apply flex-shrink-0;
}

/* Error state for failed icon loading */
.icon-preview .text-red-500 {
    @apply flex items-center;
}

/* Personality icon in the carousel */
.personality-icon {
    @apply w-16 h-16 rounded-full object-cover border-2 border-gray-200 dark:border-gray-600 bg-gray-100 dark:bg-gray-700;
}

.personality-icon:hover {
    @apply border-blue-300 dark:border-blue-500 transition-colors;
}

/* ======================================== */
/* Sidebar Toggle Functionality            */
/* ======================================== */

.sidebar {
  transition: margin-left 0.3s ease-in-out, width 0.3s ease-in-out;
  width: 16rem; /* w-64 = 16rem */
}

.sidebar.hidden {
  margin-left: -16rem; /* Hide the sidebar by moving it off-screen */
  width: 0;
}

.main-content {
  transition: margin-left 0.3s ease-in-out;
  margin-left: 0;
}

.main-content.sidebar-hidden {
  margin-left: 0; /* When sidebar is hidden, main content starts from left edge */
}

.chat-area {
  transition: width 0.3s ease-in-out;
}

/* Ensure smooth transitions for all layout changes */
.layout-transition {
  transition: all 0.3s ease-in-out;
}

/* ======================================== */
/* Enhanced Markdown Styling for Chat      */
/* ======================================== */

/* Chat bubble general styling - Updated selectors with multiple targeting approaches */
.flex[class*="justify-start"] > div[style*="background-color"],
.flex[class*="justify-end"] > div[style*="background-color"],
.flex[class*="justify-start"] > .w-fit,
.flex[class*="justify-end"] > .w-fit,
#chatWindow .flex > div[style*="background-color"],
#chatWindow .flex > .w-fit {
  word-wrap: break-word;
  overflow-wrap: break-word;
}

/* Headings in chat bubbles - Multiple selector approaches for reliability */
.flex[class*="justify-start"] > div[style*="background-color"] h1,
.flex[class*="justify-end"] > div[style*="background-color"] h1,
.flex[class*="justify-start"] > .w-fit h1,
.flex[class*="justify-end"] > .w-fit h1,
#chatWindow .flex > div[style*="background-color"] h1,
#chatWindow .flex > .w-fit h1,
.flex[class*="justify-start"] > div[style*="background-color"] h2,
.flex[class*="justify-end"] > div[style*="background-color"] h2,
.flex[class*="justify-start"] > .w-fit h2,
.flex[class*="justify-end"] > .w-fit h2,
#chatWindow .flex > div[style*="background-color"] h2,
#chatWindow .flex > .w-fit h2,
.flex[class*="justify-start"] > div[style*="background-color"] h3,
.flex[class*="justify-end"] > div[style*="background-color"] h3,
.flex[class*="justify-start"] > .w-fit h3,
.flex[class*="justify-end"] > .w-fit h3,
#chatWindow .flex > div[style*="background-color"] h3,
#chatWindow .flex > .w-fit h3,
.flex[class*="justify-start"] > div[style*="background-color"] h4,
.flex[class*="justify-end"] > div[style*="background-color"] h4,
.flex[class*="justify-start"] > .w-fit h4,
.flex[class*="justify-end"] > .w-fit h4,
#chatWindow .flex > div[style*="background-color"] h4,
#chatWindow .flex > .w-fit h4,
.flex[class*="justify-start"] > div[style*="background-color"] h5,
.flex[class*="justify-end"] > div[style*="background-color"] h5,
.flex[class*="justify-start"] > .w-fit h5,
.flex[class*="justify-end"] > .w-fit h5,
#chatWindow .flex > div[style*="background-color"] h5,
#chatWindow .flex > .w-fit h5,
.flex[class*="justify-start"] > div[style*="background-color"] h6,
.flex[class*="justify-end"] > div[style*="background-color"] h6,
.flex[class*="justify-start"] > .w-fit h6,
.flex[class*="justify-end"] > .w-fit h6,
#chatWindow .flex > div[style*="background-color"] h6,
#chatWindow .flex > .w-fit h6 {
  font-weight: 600;
  margin: 0.8em 0 0.4em 0;
  line-height: 1.3;
  color: inherit;
}

.flex[class*="justify-start"] > div[style*="background-color"] h1,
.flex[class*="justify-end"] > div[style*="background-color"] h1,
.flex[class*="justify-start"] > .w-fit h1,
.flex[class*="justify-end"] > .w-fit h1,
#chatWindow .flex > div[style*="background-color"] h1,
#chatWindow .flex > .w-fit h1 {
  font-size: 1.5em;
  border-bottom: 2px solid var(--accent-color);
  padding-bottom: 0.2em;
}

.flex[class*="justify-start"] > div[style*="background-color"] h2,
.flex[class*="justify-end"] > div[style*="background-color"] h2,
.flex[class*="justify-start"] > .w-fit h2,
.flex[class*="justify-end"] > .w-fit h2,
#chatWindow .flex > div[style*="background-color"] h2,
#chatWindow .flex > .w-fit h2 {
  font-size: 1.3em;
  border-bottom: 1px solid var(--border-color-soft);
  padding-bottom: 0.2em;
}

.flex[class*="justify-start"] > div[style*="background-color"] h3,
.flex[class*="justify-end"] > div[style*="background-color"] h3,
.flex[class*="justify-start"] > .w-fit h3,
.flex[class*="justify-end"] > .w-fit h3,
#chatWindow .flex > div[style*="background-color"] h3,
#chatWindow .flex > .w-fit h3 {
  font-size: 1.2em;
}

.flex[class*="justify-start"] > div[style*="background-color"] h4,
.flex[class*="justify-end"] > div[style*="background-color"] h4,
.flex[class*="justify-start"] > .w-fit h4,
.flex[class*="justify-end"] > .w-fit h4,
#chatWindow .flex > div[style*="background-color"] h4,
#chatWindow .flex > .w-fit h4 {
  font-size: 1.1em;
}

.flex[class*="justify-start"] > div[style*="background-color"] h5,
.flex[class*="justify-end"] > div[style*="background-color"] h5,
.flex[class*="justify-start"] > .w-fit h5,
.flex[class*="justify-end"] > .w-fit h5,
#chatWindow .flex > div[style*="background-color"] h5,
#chatWindow .flex > .w-fit h5 {
  font-size: 1.05em;
}

.flex[class*="justify-start"] > div[style*="background-color"] h6,
.flex[class*="justify-end"] > div[style*="background-color"] h6,
.flex[class*="justify-start"] > .w-fit h6,
.flex[class*="justify-end"] > .w-fit h6,
#chatWindow .flex > div[style*="background-color"] h6,
#chatWindow .flex > .w-fit h6 {
  font-size: 1em;
  font-weight: 700;
}

/* Paragraphs in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] p,
.flex[class*="justify-end"] > div[style*="background-color"] p,
.flex[class*="justify-start"] > .w-fit p,
.flex[class*="justify-end"] > .w-fit p,
#chatWindow .flex > div[style*="background-color"] p,
#chatWindow .flex > .w-fit p {
  margin: 0.6em 0;
  line-height: 1.6;
}

.flex[class*="justify-start"] > div[style*="background-color"] p:first-child,
.flex[class*="justify-end"] > div[style*="background-color"] p:first-child,
.flex[class*="justify-start"] > .w-fit p:first-child,
.flex[class*="justify-end"] > .w-fit p:first-child,
#chatWindow .flex > div[style*="background-color"] p:first-child,
#chatWindow .flex > .w-fit p:first-child {
  margin-top: 0;
}

.flex[class*="justify-start"] > div[style*="background-color"] p:last-child,
.flex[class*="justify-end"] > div[style*="background-color"] p:last-child,
.flex[class*="justify-start"] > .w-fit p:last-child,
.flex[class*="justify-end"] > .w-fit p:last-child,
#chatWindow .flex > div[style*="background-color"] p:last-child,
#chatWindow .flex > .w-fit p:last-child {
  margin-bottom: 0;
}

/* Lists in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] ul,
.flex[class*="justify-end"] > div[style*="background-color"] ul,
.flex[class*="justify-start"] > div[style*="background-color"] ol,
.flex[class*="justify-end"] > div[style*="background-color"] ol,
.flex[class*="justify-start"] > .w-fit ul,
.flex[class*="justify-end"] > .w-fit ul,
.flex[class*="justify-start"] > .w-fit ol,
.flex[class*="justify-end"] > .w-fit ol,
#chatWindow .flex > div[style*="background-color"] ul,
#chatWindow .flex > div[style*="background-color"] ol,
#chatWindow .flex > .w-fit ul,
#chatWindow .flex > .w-fit ol {
  margin: 0.8em 0;
  padding-left: 1.5em;
}

.flex[class*="justify-start"] > div[style*="background-color"] ul,
.flex[class*="justify-end"] > div[style*="background-color"] ul,
.flex[class*="justify-start"] > .w-fit ul,
.flex[class*="justify-end"] > .w-fit ul,
#chatWindow .flex > div[style*="background-color"] ul,
#chatWindow .flex > .w-fit ul {
  list-style-type: disc;
}

.flex[class*="justify-start"] > div[style*="background-color"] ol,
.flex[class*="justify-end"] > div[style*="background-color"] ol,
.flex[class*="justify-start"] > .w-fit ol,
.flex[class*="justify-end"] > .w-fit ol,
#chatWindow .flex > div[style*="background-color"] ol,
#chatWindow .flex > .w-fit ol {
  list-style-type: decimal;
}

.flex[class*="justify-start"] > div[style*="background-color"] li,
.flex[class*="justify-end"] > div[style*="background-color"] li,
.flex[class*="justify-start"] > .w-fit li,
.flex[class*="justify-end"] > .w-fit li,
#chatWindow .flex > div[style*="background-color"] li,
#chatWindow .flex > .w-fit li {
  margin: 0.3em 0;
  line-height: 1.5;
}

/* Nested lists */
.flex[class*="justify-start"] > div[style*="background-color"] ul ul,
.flex[class*="justify-end"] > div[style*="background-color"] ul ul,
.flex[class*="justify-start"] > div[style*="background-color"] ol ol,
.flex[class*="justify-end"] > div[style*="background-color"] ol ol,
.flex[class*="justify-start"] > div[style*="background-color"] ul ol,
.flex[class*="justify-end"] > div[style*="background-color"] ul ol,
.flex[class*="justify-start"] > div[style*="background-color"] ol ul,
.flex[class*="justify-end"] > div[style*="background-color"] ol ul,
.flex[class*="justify-start"] > .w-fit ul ul,
.flex[class*="justify-end"] > .w-fit ul ul,
.flex[class*="justify-start"] > .w-fit ol ol,
.flex[class*="justify-end"] > .w-fit ol ol,
.flex[class*="justify-start"] > .w-fit ul ol,
.flex[class*="justify-end"] > .w-fit ul ol,
.flex[class*="justify-start"] > .w-fit ol ul,
.flex[class*="justify-end"] > .w-fit ol ul,
#chatWindow .flex > div[style*="background-color"] ul ul,
#chatWindow .flex > div[style*="background-color"] ol ol,
#chatWindow .flex > div[style*="background-color"] ul ol,
#chatWindow .flex > div[style*="background-color"] ol ul,
#chatWindow .flex > .w-fit ul ul,
#chatWindow .flex > .w-fit ol ol,
#chatWindow .flex > .w-fit ul ol,
#chatWindow .flex > .w-fit ol ul {
  margin: 0.2em 0;
}

/* Blockquotes in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] blockquote,
.flex[class*="justify-end"] > div[style*="background-color"] blockquote,
.flex[class*="justify-start"] > .w-fit blockquote,
.flex[class*="justify-end"] > .w-fit blockquote,
#chatWindow .flex > div[style*="background-color"] blockquote,
#chatWindow .flex > .w-fit blockquote {
  margin: 1em 0;
  padding: 0.8em 1.2em;
  border-left: 4px solid var(--accent-color);
  background-color: var(--background-color);
  border-radius: 0 6px 6px 0;
  font-style: italic;
  opacity: 0.9;
}

/* Code styling in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] code,
.flex[class*="justify-end"] > div[style*="background-color"] code,
.flex[class*="justify-start"] > .w-fit code,
.flex[class*="justify-end"] > .w-fit code,
#chatWindow .flex > div[style*="background-color"] code,
#chatWindow .flex > .w-fit code {
  background-color: var(--background-color);
  color: var(--accent-color);
  padding: 0.2em 0.4em;
  border-radius: 4px;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  font-size: 0.9em;
  border: 1px solid var(--border-color-soft);
}

.flex[class*="justify-start"] > div[style*="background-color"] pre,
.flex[class*="justify-end"] > div[style*="background-color"] pre,
.flex[class*="justify-start"] > .w-fit pre,
.flex[class*="justify-end"] > .w-fit pre,
#chatWindow .flex > div[style*="background-color"] pre,
#chatWindow .flex > .w-fit pre {
  background-color: var(--content-bg-color);
  border: 1px solid var(--border-color-soft);
  border-radius: 6px;
  padding: 1em;
  margin: 0.8em 0;
  overflow-x: auto;
  white-space: pre;
}

.flex[class*="justify-start"] > div[style*="background-color"] pre code,
.flex[class*="justify-end"] > div[style*="background-color"] pre code,
.flex[class*="justify-start"] > .w-fit pre code,
.flex[class*="justify-end"] > .w-fit pre code,
#chatWindow .flex > div[style*="background-color"] pre code,
#chatWindow .flex > .w-fit pre code {
  background: none;
  border: none;
  padding: 0;
  font-size: 0.9em;
  color: inherit;
}

/* Links in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] a,
.flex[class*="justify-end"] > div[style*="background-color"] a,
.flex[class*="justify-start"] > .w-fit a,
.flex[class*="justify-end"] > .w-fit a,
#chatWindow .flex > div[style*="background-color"] a,
#chatWindow .flex > .w-fit a {
  color: var(--accent-color);
  text-decoration: underline;
  cursor: pointer;
}

.flex[class*="justify-start"] > div[style*="background-color"] a:hover,
.flex[class*="justify-end"] > div[style*="background-color"] a:hover,
.flex[class*="justify-start"] > .w-fit a:hover,
.flex[class*="justify-end"] > .w-fit a:hover,
#chatWindow .flex > div[style*="background-color"] a:hover,
#chatWindow .flex > .w-fit a:hover {
  color: var(--primary-color);
  text-decoration: underline;
}

/* Bold and emphasis in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] strong,
.flex[class*="justify-end"] > div[style*="background-color"] strong,
.flex[class*="justify-start"] > div[style*="background-color"] b,
.flex[class*="justify-end"] > div[style*="background-color"] b,
.flex[class*="justify-start"] > .w-fit strong,
.flex[class*="justify-end"] > .w-fit strong,
.flex[class*="justify-start"] > .w-fit b,
.flex[class*="justify-end"] > .w-fit b,
#chatWindow .flex > div[style*="background-color"] strong,
#chatWindow .flex > div[style*="background-color"] b,
#chatWindow .flex > .w-fit strong,
#chatWindow .flex > .w-fit b {
  font-weight: 700;
}

.flex[class*="justify-start"] > div[style*="background-color"] em,
.flex[class*="justify-end"] > div[style*="background-color"] em,
.flex[class*="justify-start"] > div[style*="background-color"] i,
.flex[class*="justify-end"] > div[style*="background-color"] i,
.flex[class*="justify-start"] > .w-fit em,
.flex[class*="justify-end"] > .w-fit em,
.flex[class*="justify-start"] > .w-fit i,
.flex[class*="justify-end"] > .w-fit i,
#chatWindow .flex > div[style*="background-color"] em,
#chatWindow .flex > div[style*="background-color"] i,
#chatWindow .flex > .w-fit em,
#chatWindow .flex > .w-fit i {
  font-style: italic;
}

/* Horizontal rules in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] hr,
.flex[class*="justify-end"] > div[style*="background-color"] hr,
.flex[class*="justify-start"] > .w-fit hr,
.flex[class*="justify-end"] > .w-fit hr,
#chatWindow .flex > div[style*="background-color"] hr,
#chatWindow .flex > .w-fit hr {
  border: none;
  height: 2px;
  background: linear-gradient(to right, transparent, var(--border-color-soft), transparent);
  margin: 1.5em 0;
}

/* Tables in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] table,
.flex[class*="justify-end"] > div[style*="background-color"] table,
.flex[class*="justify-start"] > .w-fit table,
.flex[class*="justify-end"] > .w-fit table,
#chatWindow .flex > div[style*="background-color"] table,
#chatWindow .flex > .w-fit table {
  border-collapse: collapse;
  width: 100%;
  margin: 1em 0;
  border-radius: 6px;
  overflow: hidden;
  border: 1px solid var(--border-color-soft);
}

.flex[class*="justify-start"] > div[style*="background-color"] th,
.flex[class*="justify-end"] > div[style*="background-color"] th,
.flex[class*="justify-start"] > div[style*="background-color"] td,
.flex[class*="justify-end"] > div[style*="background-color"] td,
.flex[class*="justify-start"] > .w-fit th,
.flex[class*="justify-end"] > .w-fit th,
.flex[class*="justify-start"] > .w-fit td,
.flex[class*="justify-end"] > .w-fit td,
#chatWindow .flex > div[style*="background-color"] th,
#chatWindow .flex > div[style*="background-color"] td,
#chatWindow .flex > .w-fit th,
#chatWindow .flex > .w-fit td {
  border: 1px solid var(--border-color-soft);
  padding: 0.8em 1em;
  text-align: left;
}

.flex[class*="justify-start"] > div[style*="background-color"] th,
.flex[class*="justify-end"] > div[style*="background-color"] th,
.flex[class*="justify-start"] > .w-fit th,
.flex[class*="justify-end"] > .w-fit th,
#chatWindow .flex > div[style*="background-color"] th,
#chatWindow .flex > .w-fit th {
  background-color: var(--accent-color);
  color: white;
  font-weight: 600;
}

.flex[class*="justify-start"] > div[style*="background-color"] tr:nth-child(even),
.flex[class*="justify-end"] > div[style*="background-color"] tr:nth-child(even),
.flex[class*="justify-start"] > .w-fit tr:nth-child(even),
.flex[class*="justify-end"] > .w-fit tr:nth-child(even),
#chatWindow .flex > div[style*="background-color"] tr:nth-child(even),
#chatWindow .flex > .w-fit tr:nth-child(even) {
  background-color: var(--background-color);
}

.flex[class*="justify-start"] > div[style*="background-color"] tr:hover,
.flex[class*="justify-end"] > div[style*="background-color"] tr:hover,
.flex[class*="justify-start"] > .w-fit tr:hover,
.flex[class*="justify-end"] > .w-fit tr:hover,
#chatWindow .flex > div[style*="background-color"] tr:hover,
#chatWindow .flex > .w-fit tr:hover {
  background-color: var(--content-bg-color);
}

/* Dark theme adjustments */
.theme-dark .flex[class*="justify-start"] > div[style*="background-color"] code,
.theme-dark .flex[class*="justify-end"] > div[style*="background-color"] code,
.theme-dark .flex[class*="justify-start"] > .w-fit code,
.theme-dark .flex[class*="justify-end"] > .w-fit code,
.theme-dark #chatWindow .flex > div[style*="background-color"] code,
.theme-dark #chatWindow .flex > .w-fit code {
  background-color: rgba(0, 0, 0, 0.3);
  color: var(--accent-color);
}

.theme-dark .flex[class*="justify-start"] > div[style*="background-color"] pre,
.theme-dark .flex[class*="justify-end"] > div[style*="background-color"] pre,
.theme-dark .flex[class*="justify-start"] > .w-fit pre,
.theme-dark .flex[class*="justify-end"] > .w-fit pre,
.theme-dark #chatWindow .flex > div[style*="background-color"] pre,
.theme-dark #chatWindow .flex > .w-fit pre {
  background-color: rgba(0, 0, 0, 0.2);
}

.theme-dark .flex[class*="justify-start"] > div[style*="background-color"] blockquote,
.theme-dark .flex[class*="justify-end"] > div[style*="background-color"] blockquote,
.theme-dark .flex[class*="justify-start"] > .w-fit blockquote,
.theme-dark .flex[class*="justify-end"] > .w-fit blockquote,
.theme-dark #chatWindow .flex > div[style*="background-color"] blockquote,
.theme-dark #chatWindow .flex > .w-fit blockquote {
  background-color: rgba(255, 255, 255, 0.05);
}

.theme-dark .flex[class*="justify-start"] > div[style*="background-color"] tr:nth-child(even),
.theme-dark .flex[class*="justify-end"] > div[style*="background-color"] tr:nth-child(even),
.theme-dark .flex[class*="justify-start"] > .w-fit tr:nth-child(even),
.theme-dark .flex[class*="justify-end"] > .w-fit tr:nth-child(even),
.theme-dark #chatWindow .flex > div[style*="background-color"] tr:nth-child(even),
.theme-dark #chatWindow .flex > .w-fit tr:nth-child(even) {
  background-color: rgba(255, 255, 255, 0.05);
}

.theme-dark .flex[class*="justify-start"] > div[style*="background-color"] tr:hover,
.theme-dark .flex[class*="justify-end"] > div[style*="background-color"] tr:hover,
.theme-dark .flex[class*="justify-start"] > .w-fit tr:hover,
.theme-dark .flex[class*="justify-end"] > .w-fit tr:hover,
.theme-dark #chatWindow .flex > div[style*="background-color"] tr:hover,
.theme-dark #chatWindow .flex > .w-fit tr:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* LaTeX/MathJax styling in chat bubbles */
.flex[class*="justify-start"] > div[style*="background-color"] .MathJax,
.flex[class*="justify-end"] > div[style*="background-color"] .MathJax,
.flex[class*="justify-start"] > .w-fit .MathJax,
.flex[class*="justify-end"] > .w-fit .MathJax,
#chatWindow .flex > div[style*="background-color"] .MathJax,
#chatWindow .flex > .w-fit .MathJax {
  font-size: 1em !important;
  color: inherit !important;
}

.flex[class*="justify-start"] > div[style*="background-color"] mjx-container[display="true"],
.flex[class*="justify-end"] > div[style*="background-color"] mjx-container[display="true"],
.flex[class*="justify-start"] > .w-fit mjx-container[display="true"],
.flex[class*="justify-end"] > .w-fit mjx-container[display="true"],
#chatWindow .flex > div[style*="background-color"] mjx-container[display="true"],
#chatWindow .flex > .w-fit mjx-container[display="true"] {
  margin: 1em 0;
  padding: 0.5em;
  background-color: var(--background-color);
  border-radius: 4px;
  border: 1px solid var(--border-color-soft);
}

.theme-dark .flex[class*="justify-start"] > div[style*="background-color"] mjx-container[display="true"],
.theme-dark .flex[class*="justify-end"] > div[style*="background-color"] mjx-container[display="true"],
.theme-dark .flex[class*="justify-start"] > .w-fit mjx-container[display="true"],
.theme-dark .flex[class*="justify-end"] > .w-fit mjx-container[display="true"],
.theme-dark #chatWindow .flex > div[style*="background-color"] mjx-container[display="true"],
.theme-dark #chatWindow .flex > .w-fit mjx-container[display="true"] {
  background-color: rgba(0, 0, 0, 0.2);
}

/* ======================================== */